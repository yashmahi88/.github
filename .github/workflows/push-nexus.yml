name: Push To Nexus

on:
  workflow_call:
    inputs:
      LANGUAGE:
        description: 'Programming language of the package'
        required: true
        type: string
    secrets:
      NEXUS_USERNAME:
        required: true
      NEXUS_PASSWORD:
        required: true
      NEXUS_DEV_SOURCE:
        required: true
      NEXUS_RELEASE_SOURCE:
        required: true
      NEXUS_API_KEY:
        required: true
      NEXUS_TAG_SOURCE:
        required: true
      NPM_TOKEN:
        required: true

jobs:
  push_to_nexus_tag:
    runs-on: ubuntu-latest
    env:
      PACKAGE_ID: ""
      PACKAGE_VERSION: ""
      ARTIFACT_PATH: ""
    if: startsWith(github.ref, 'refs/tags/')
    environment: nexus-approval
    steps:
      - name: Download Package Artifact
        uses: actions/download-artifact@v3
        with:
          name: nuget-package
          path: ${{ github.workspace }}/artifact

      - name: List files in artifact directory
        run: |
          pwd 
          ls -al ${{ github.workspace }}/artifact/

      - name: Login to Nexus Repository
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Logging in to Nexus..."
          echo "//52.187.94.85:8081/repository/npm-tag/:_authToken=${{ secrets.NPM_TOKEN }}>> ~/.npmrc
          echo "always-auth=true" >> ~/.npmrc

      - name: Push to Nexus Repository (Tag)
        env:
          LANGUAGE: ${{ inputs.LANGUAGE }}
        run: |
          echo "Pushing to Nexus repository for tag."
          if [[ "$LANGUAGE" == "java" ]]; then
            mvn deploy:deploy-file -Dfile=./artifact/*.jar -DgroupId=com.example -DartifactId=${{ env.PACKAGE_ID }} -Dversion=${{ env.PACKAGE_VERSION }} -Dpackaging=jar -DrepositoryId=nexus -Durl=$NEXUS_SOURCE -Dusername=${{ secrets.NEXUS_USERNAME }} -Dpassword=${{ secrets.NEXUS_PASSWORD }}          
          elif [[ "$LANGUAGE" == "dotnet" ]]; then
            dotnet nuget push ${{ github.workspace }}/artifact/*.nupkg --source $NEXUS_SOURCE --api-key $NEXUS_API_KEY
          elif [[ "$LANGUAGE" == "node" ]]; then
            npm publish ./artifact/*.tgz --registry $NEXUS_SOURCE
          else
            echo "Unsupported language $LANGUAGE"
            exit 1
          fi

  push_to_nexus_branch:
    runs-on: ubuntu-latest
    env:
      PACKAGE_ID: ""
      PACKAGE_VERSION: ""
      ARTIFACT_PATH: ""
    if: github.ref == 'refs/heads/development' || github.ref == 'refs/heads/release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Package Artifact
        uses: actions/download-artifact@v3
        with:
          name: nuget-package
          path: ./artifact
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: ./downloaded-artifacts
  
      - name: Verify contents of downloaded artifact
        run: |
          echo "Listing contents of downloaded artifacts:"
          ls -R ./downloaded-artifacts
          cat ./downloaded-artifacts/package_info.txt
  
      - name: Extract PACKAGE_ID and PACKAGE_VERSION
        run: |
            PACKAGE_ID=$(grep "PACKAGE_ID:" ./downloaded-artifacts/package_info.txt | cut -d ':' -f2 | xargs)
            PACKAGE_VERSION=$(grep "PACKAGE_VERSION:" ./downloaded-artifacts/package_info.txt | cut -d ':' -f2 | xargs)
  
            echo "PACKAGE_ID=${PACKAGE_ID}"
            echo "PACKAGE_VERSION=${PACKAGE_VERSION}"
  
            echo "PACKAGE_ID=${PACKAGE_ID}" >> $GITHUB_ENV
            echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV


      - name: List files in artifact directory
        run: ls -al ./artifact/*.jar

      - name: Setup npm authentication for Nexus
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Logging in to Nexus..."          
          
          if [[ "${GITHUB_REF}" == "refs/heads/development" ]]; then
            echo "//52.187.94.85:8081/repository/npm-snapshot/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
            echo "Using NPM_TOKEN for development"
          elif [[ "${GITHUB_REF}" == "refs/heads/release" ]]; then
            echo "//52.187.94.85:8081/repository/npm-rc/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
            echo "Using NPM_TOKEN for release"
          fi
      
          echo "always-auth=true" >> ~/.npmrc
      
      - name: Debug .npmrc
        run: cat ~/.npmrc

      - name: Push to Nexus Repository (Branch)
        env:
          NEXUS_DEV_SOURCE: ${{ secrets.NEXUS_DEV_SOURCE }}
          NEXUS_RELEASE_SOURCE: ${{ secrets.NEXUS_RELEASE_SOURCE }}
          LANGUAGE: ${{ inputs.LANGUAGE }}
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/development" ]]; then
            NEXUS_SOURCE=$NEXUS_DEV_SOURCE
            echo "NEXUS_SOURCE=$NEXUS_DEV_SOURCE" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == "refs/heads/release" ]]; then
            NEXUS_SOURCE=$NEXUS_RELEASE_SOURCE
            echo "NEXUS_SOURCE=$NEXUS_RELEASE_SOURCE" >> $GITHUB_ENV
          fi
          echo "export NEXUS_USERNAME=${{ secrets.NEXUS_USERNAME }}" >> $GITHUB_ENV
          echo "export NEXUS_PASSWORD=${{ secrets.NEXUS_PASSWORD }}" >> $GITHUB_ENV

          echo "Pushing to Nexus repository: $NEXUS_SOURCE"
          if [[ "$LANGUAGE" == "java" ]]; then
          echo "Deploying artifact with the following details:"
          echo "PACKAGE_ID: ${PACKAGE_ID}"
          echo "PACKAGE_VERSION: ${PACKAGE_VERSION}"
            mvn deploy:deploy-file -Dfile=./artifact/$(basename $(ls ./artifact/*.jar)) -DgroupId=com.example -Dpackage.id=$PACKAGE_ID -Dpackage.version=$PACKAGE_VERSION -Dpackaging=jar -DrepositoryId=nexus -Durl=$NEXUS_SOURCE -Dusername=${{ secrets.NEXUS_USERNAME }} -Dpassword=${{ secrets.NEXUS_PASSWORD }}
          elif [[ "$LANGUAGE" == "dotnet" ]]; then
            dotnet nuget push ./artifact/*.nupkg --source $NEXUS_SOURCE --api-key $NEXUS_API_KEY
          elif [[ "$LANGUAGE" == "node" ]]; then
            npm publish ./artifact/*.tgz --registry $NEXUS_SOURCE
          else
            echo "Unsupported language $LANGUAGE"
            exit 1
          fi
